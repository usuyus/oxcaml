source_filename = "data_decl.ml"

@camlData_decl__data_begin = global {  } {  }, align 8
define void @camlData_decl__code_begin() { ret void }

@camlData_decl__gc_roots = global { i64 } { i64 0 }, align 8
@.header.camlData_decl = global { i64 } { i64 4864 }, align 8
@camlData_decl = global { ptr, ptr, ptr, ptr } { ptr @camlData_decl__float4, ptr @camlData_decl__float327, ptr @camlData_decl__f_2, ptr @camlData_decl__g_3 }, align 8
@.header.camlData_decl__g_3 = global { i64 } { i64 7159 }, align 8
@camlData_decl__g_3 = global { ptr, i64, ptr } { ptr @caml_curry2, i64 144115188075855885, ptr @camlData_decl__g_HIDE_STAMP }, align 8
@.header.camlData_decl__f_2 = global { i64 } { i64 4345 }, align 8
@camlData_decl__f_2 = global { ptr, i64 } { ptr @camlData_decl__f_HIDE_STAMP, i64 108086391056891909 }, align 8
@.header.camlData_decl__const_block67 = global { i64 } { i64 2827 }, align 8
@camlData_decl__const_block67 = global { ptr, ptr } { ptr @camlData_decl__immstring63, ptr @camlData_decl__const_block65 }, align 8
@.header.camlData_decl__const_block65 = global { i64 } { i64 4868 }, align 8
@camlData_decl__const_block65 = global { i64, i64, i64, ptr } { i64 1, i64 1, i64 1, ptr @camlData_decl__const_block48 }, align 8
@.header.camlData_decl__immstring63 = global { i64 } { i64 4092 }, align 8
@camlData_decl__immstring63 = global { [ 20 x i8 ], [ 3 x i8 ], i8 } { [ 20 x i8 ] c"\6d\75\74\75\61\6c\6c\79\5f\72\65\63\75\72\73\69\76\65\3a\20", [ 3 x i8 ] zeroinitializer, i8 3 }, align 8
@.header.camlData_decl__const_block54 = global { i64 } { i64 4872 }, align 8
@camlData_decl__const_block54 = global { ptr, i64, ptr, ptr } { ptr @camlData_decl__const_block44, i64 1, ptr @camlData_decl__const_block46, ptr @camlData_decl__const_block52 }, align 8
@.header.camlData_decl__const_block52 = global { i64 } { i64 2828 }, align 8
@camlData_decl__const_block52 = global { i64, ptr } { i64 65, ptr @camlData_decl__const_block50 }, align 8
@.header.camlData_decl__const_block50 = global { i64 } { i64 2818 }, align 8
@camlData_decl__const_block50 = global { i64, ptr } { i64 1, ptr @camlData_decl__const_block48 }, align 8
@.header.camlData_decl__const_block48 = global { i64 } { i64 2828 }, align 8
@camlData_decl__const_block48 = global { i64, i64 } { i64 21, i64 1 }, align 8
@.header.camlData_decl__const_block46 = global { i64 } { i64 1792 }, align 8
@camlData_decl__const_block46 = global { i64 } { i64 41 }, align 8
@.header.camlData_decl__const_block44 = global { i64 } { i64 2816 }, align 8
@camlData_decl__const_block44 = global { i64, i64 } { i64 1, i64 1 }, align 8
@.header.camlData_decl__immstring38 = global { i64 } { i64 2044 }, align 8
@camlData_decl__immstring38 = global { [ 5 x i8 ], [ 2 x i8 ], i8 } { [ 5 x i8 ] c"\25\2e\31\30\67", [ 2 x i8 ] zeroinitializer, i8 2 }, align 8
@.header.camlData_decl__immstring35 = global { i64 } { i64 5116 }, align 8
@camlData_decl__immstring35 = global { [ 30 x i8 ], [ 1 x i8 ], i8 } { [ 30 x i8 ] c"\6f\6e\65\20\6f\66\20\74\68\65\20\73\74\72\69\6e\67\73\0a\6f\66\20\61\6c\6c\20\74\69\6d\65", [ 1 x i8 ] zeroinitializer, i8 1 }, align 8
@.header.camlData_decl__float327 = global { i64 } { i64 3071 }, align 8
@camlData_decl__float327 = global { ptr, float } { ptr @caml_float32_ops, float 2.71828174591064453125 }, align 8
@.header.camlData_decl__float4 = global { i64 } { i64 2045 }, align 8
@camlData_decl__float4 = global { double } { double 3.14159265358979311600 }, align 8
define cc 104 { { ptr, ptr }, { i64 } } @camlData_decl__f_HIDE_STAMP(ptr %0, ptr %1, i64 %2)  {
  %ds = alloca ptr
  store ptr %0, ptr %ds
  %alloc = alloca ptr
  store ptr %1, ptr %alloc
  %4 = alloca i64
  store i64 %2, ptr %4
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca i64
  %8 = alloca i64
  %9 = alloca i64
  %10 = alloca i64
  br label %L1
L1:
  br label %L101
L101:                                                ; preds = %L1
  %11 = load i64, ptr %4
  store i64 %11, ptr %6
  %12 = load i64, ptr %6
  %13 = icmp slt i64 %12, 3
  br i1 %13, label %L103, label %14
14:
  %15 = load i64, ptr %6
  %16 = icmp sgt i64 %15, 3
  br i1 %16, label %L105, label %L103
L103:                                                ; preds = %L101
  store i64 3, ptr %7
  %17 = load i64, ptr %7
  store i64 %17, ptr %4
  %18 = extractvalue { { { ptr, ptr }, { i64 } } } poison, 0
  %19 = load ptr, ptr %ds
  %20 = insertvalue { { ptr, ptr }, { i64 } } %18, ptr %19, 0, 0
  %21 = load ptr, ptr %alloc
  %22 = insertvalue { { ptr, ptr }, { i64 } } %20, ptr %21, 0, 1
  %23 = load i64, ptr %4
  %24 = insertvalue { { ptr, ptr }, { i64 } } %22, i64 %23, 1, 0
  ret { { ptr, ptr }, { i64 } } %24
L105:                                                ; preds = %L101
  %25 = load i64, ptr %6
  store i64 %25, ptr %8
  %26 = load i64, ptr %8
  %27 = add i64 %26, -4
  store i64 %27, ptr %8
  %28 = load i64, ptr %6
  store i64 %28, ptr %9
  %29 = load i64, ptr %9
  %30 = add i64 %29, -2
  store i64 %30, ptr %9
  %31 = load i64, ptr %9
  store i64 %31, ptr %4
  %32 = load i64, ptr %8
  store i64 %32, ptr %5
  %33 = load i64, ptr %4
  %34 = load i64, ptr %5
  %35 = load ptr, ptr %ds
  %36 = load ptr, ptr %alloc
  %37 =  call cc 104 { { ptr, ptr }, { i64 } } @camlData_decl__g_HIDE_STAMP(ptr %35, ptr %36, i64 %33, i64 %34)
  %38 = extractvalue { { ptr, ptr }, { i64 } } %37, 0, 0
  store ptr %38, ptr %ds
  %39 = extractvalue { { ptr, ptr }, { i64 } } %37, 0, 1
  store ptr %39, ptr %alloc
  %40 = extractvalue { { ptr, ptr }, { i64 } } %37, 1, 0
  store i64 %40, ptr %4
  br label %L107
L107:                                                ; preds = %L105
  %41 = load i64, ptr %4
  store i64 %41, ptr %10
  %42 = load i64, ptr %10
  store i64 %42, ptr %4
  %43 = extractvalue { { { ptr, ptr }, { i64 } } } poison, 0
  %44 = load ptr, ptr %ds
  %45 = insertvalue { { ptr, ptr }, { i64 } } %43, ptr %44, 0, 0
  %46 = load ptr, ptr %alloc
  %47 = insertvalue { { ptr, ptr }, { i64 } } %45, ptr %46, 0, 1
  %48 = load i64, ptr %4
  %49 = insertvalue { { ptr, ptr }, { i64 } } %47, i64 %48, 1, 0
  ret { { ptr, ptr }, { i64 } } %49
}

define cc 104 { { ptr, ptr }, { i64 } } @camlData_decl__g_HIDE_STAMP(ptr %0, ptr %1, i64 %2, i64 %3)  {
  %ds = alloca ptr
  store ptr %0, ptr %ds
  %alloc = alloca ptr
  store ptr %1, ptr %alloc
  %5 = alloca i64
  store i64 %2, ptr %5
  %6 = alloca i64
  store i64 %3, ptr %6
  %7 = alloca i64
  %8 = alloca i64
  %9 = alloca i64
  %10 = alloca i64
  %11 = alloca i64
  %12 = alloca i64
  %13 = alloca i64
  %14 = alloca i64
  br label %L1
L1:
  br label %L112
L112:                                                ; preds = %L1
  %15 = load i64, ptr %5
  store i64 %15, ptr %7
  %16 = load i64, ptr %6
  store i64 %16, ptr %8
  %17 = load i64, ptr %8
  store i64 %17, ptr %5
  %18 = load i64, ptr %5
  %19 = load ptr, ptr %ds
  %20 = load ptr, ptr %alloc
  %21 =  call cc 104 { { ptr, ptr }, { i64 } } @camlData_decl__f_HIDE_STAMP(ptr %19, ptr %20, i64 %18)
  %22 = extractvalue { { ptr, ptr }, { i64 } } %21, 0, 0
  store ptr %22, ptr %ds
  %23 = extractvalue { { ptr, ptr }, { i64 } } %21, 0, 1
  store ptr %23, ptr %alloc
  %24 = extractvalue { { ptr, ptr }, { i64 } } %21, 1, 0
  store i64 %24, ptr %5
  br label %L114
L114:                                                ; preds = %L112
  %25 = load i64, ptr %5
  store i64 %25, ptr %9
  %26 = load i64, ptr %9
  store i64 %26, ptr %10
  %27 = load i64, ptr %7
  store i64 %27, ptr %5
  %28 = load i64, ptr %5
  %29 = load ptr, ptr %ds
  %30 = load ptr, ptr %alloc
  %31 =  call cc 104 { { ptr, ptr }, { i64 } } @camlData_decl__f_HIDE_STAMP(ptr %29, ptr %30, i64 %28)
  %32 = extractvalue { { ptr, ptr }, { i64 } } %31, 0, 0
  store ptr %32, ptr %ds
  %33 = extractvalue { { ptr, ptr }, { i64 } } %31, 0, 1
  store ptr %33, ptr %alloc
  %34 = extractvalue { { ptr, ptr }, { i64 } } %31, 1, 0
  store i64 %34, ptr %5
  br label %L115
L115:                                                ; preds = %L114
  %35 = load i64, ptr %5
  store i64 %35, ptr %11
  %36 = load i64, ptr %11
  store i64 %36, ptr %12
  %37 = load i64, ptr %12
  store i64 %37, ptr %13
  %38 = load i64, ptr %13
  %39 = load i64, ptr %10
  %40 = add i64 %38, %39
  store i64 %40, ptr %13
  %41 = load i64, ptr %13
  store i64 %41, ptr %14
  %42 = load i64, ptr %14
  %43 = add i64 %42, -1
  store i64 %43, ptr %14
  %44 = load i64, ptr %14
  store i64 %44, ptr %5
  %45 = extractvalue { { { ptr, ptr }, { i64 } } } poison, 0
  %46 = load ptr, ptr %ds
  %47 = insertvalue { { ptr, ptr }, { i64 } } %45, ptr %46, 0, 0
  %48 = load ptr, ptr %alloc
  %49 = insertvalue { { ptr, ptr }, { i64 } } %47, ptr %48, 0, 1
  %50 = load i64, ptr %5
  %51 = insertvalue { { ptr, ptr }, { i64 } } %49, i64 %50, 1, 0
  ret { { ptr, ptr }, { i64 } } %51
}

define cc 104 { { ptr, ptr }, { i64 } } @camlData_decl__entry(ptr %0, ptr %1)  {
  %ds = alloca ptr
  store ptr %0, ptr %ds
  %alloc = alloca ptr
  store ptr %1, ptr %alloc
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca i64
  %8 = alloca i64
  %9 = alloca i64
  %10 = alloca i64
  %11 = alloca i64
  %12 = alloca i64
  %13 = alloca i64
  %14 = alloca i64
  %15 = alloca i64
  %16 = alloca i64
  %17 = alloca i64
  %18 = alloca i64
  %19 = alloca i64
  %20 = alloca i64
  %21 = alloca i64
  %22 = alloca i64
  %23 = alloca i64
  %24 = alloca i64
  %25 = alloca i64
  %26 = alloca i64
  %27 = alloca i64
  %28 = alloca i64
  %29 = alloca i64
  %30 = alloca i64
  %31 = alloca i64
  %32 = alloca i64
  %33 = alloca i64
  %34 = alloca i64
  %35 = alloca i64
  %36 = alloca i64
  %37 = alloca i64
  %38 = alloca i64
  %39 = alloca i64
  %40 = alloca i64
  %41 = alloca i64
  %42 = alloca i64
  %43 = alloca i64
  %44 = alloca i64
  %45 = alloca i64
  %46 = alloca i64
  %47 = alloca i64
  %48 = alloca i64
  %49 = alloca i64
  %50 = alloca i64
  %51 = alloca i64
  %52 = alloca i64
  %53 = alloca i64
  %54 = alloca i64
  br label %L1
L1:
  br label %L122
L122:                                                ; preds = %L1
  store i64 61, ptr %10
  store i64 1, ptr %11
  store ptr @camlData_decl__immstring35, ptr %12
  store ptr @camlStdlib__print_endline_138, ptr %13
  %55 = load i64, ptr %13
  store i64 %55, ptr %14
  %56 = load i64, ptr %14
  %57 = add i64 %56, 16
  store i64 %57, ptr %14
  %58 = load i64, ptr %14
  %59 = add i64 %58, 0
  %60 = inttoptr i64 %59 to ptr
  %61 = load i64, ptr %60
  store i64 %61, ptr %15
  %62 = load i64, ptr %15
  store i64 %62, ptr %5
  %63 = load i64, ptr %12
  store i64 %63, ptr %6
  %64 = load i64, ptr %11
  store i64 %64, ptr %7
  %65 = load i64, ptr %10
  store i64 %65, ptr %8
  %66 = load i64, ptr %5
  %67 = load i64, ptr %6
  %68 = load i64, ptr %7
  %69 = load i64, ptr %8
  %70 = load ptr, ptr %ds
  %71 = load ptr, ptr %alloc
  %72 =  call cc 105 { { ptr, ptr }, { i64 } } @caml_c_call(ptr %70, ptr %71, ptr @caml_ml_output, i64 poison, i64 %66, i64 %67, i64 %68, i64 %69)
  %73 = extractvalue { { ptr, ptr }, { i64 } } %72, 0, 0
  store ptr %73, ptr %ds
  %74 = extractvalue { { ptr, ptr }, { i64 } } %72, 0, 1
  store ptr %74, ptr %alloc
  %75 = extractvalue { { ptr, ptr }, { i64 } } %72, 1, 0
  store i64 %75, ptr %3
  br label %L124
L124:                                                ; preds = %L122
  %76 = load i64, ptr %3
  store i64 %76, ptr %16
  %77 = load i64, ptr %16
  store i64 %77, ptr %17
  store i64 21, ptr %18
  store ptr @camlStdlib__print_endline_138, ptr %19
  %78 = load i64, ptr %19
  store i64 %78, ptr %20
  %79 = load i64, ptr %20
  %80 = add i64 %79, 16
  store i64 %80, ptr %20
  %81 = load i64, ptr %20
  %82 = add i64 %81, 0
  %83 = inttoptr i64 %82 to ptr
  %84 = load i64, ptr %83
  store i64 %84, ptr %21
  %85 = load i64, ptr %21
  store i64 %85, ptr %5
  %86 = load i64, ptr %18
  store i64 %86, ptr %6
  %87 = load i64, ptr %5
  %88 = load i64, ptr %6
  %89 = load ptr, ptr %ds
  %90 = load ptr, ptr %alloc
  %91 =  call cc 105 { { ptr, ptr }, { i64 } } @caml_c_call(ptr %89, ptr %90, ptr @caml_ml_output_char, i64 poison, i64 %87, i64 %88)
  %92 = extractvalue { { ptr, ptr }, { i64 } } %91, 0, 0
  store ptr %92, ptr %ds
  %93 = extractvalue { { ptr, ptr }, { i64 } } %91, 0, 1
  store ptr %93, ptr %alloc
  %94 = extractvalue { { ptr, ptr }, { i64 } } %91, 1, 0
  store i64 %94, ptr %3
  br label %L127
L127:                                                ; preds = %L124
  %95 = load i64, ptr %3
  store i64 %95, ptr %22
  %96 = load i64, ptr %22
  store i64 %96, ptr %23
  store ptr @camlStdlib__print_endline_138, ptr %24
  %97 = load i64, ptr %24
  store i64 %97, ptr %25
  %98 = load i64, ptr %25
  %99 = add i64 %98, 16
  store i64 %99, ptr %25
  %100 = load i64, ptr %25
  %101 = add i64 %100, 0
  %102 = inttoptr i64 %101 to ptr
  %103 = load i64, ptr %102
  store i64 %103, ptr %26
  %104 = load i64, ptr %26
  store i64 %104, ptr %5
  %105 = load i64, ptr %5
  %106 = load ptr, ptr %ds
  %107 = load ptr, ptr %alloc
  %108 =  call cc 105 { { ptr, ptr }, { i64 } } @caml_c_call(ptr %106, ptr %107, ptr @caml_ml_flush, i64 poison, i64 %105)
  %109 = extractvalue { { ptr, ptr }, { i64 } } %108, 0, 0
  store ptr %109, ptr %ds
  %110 = extractvalue { { ptr, ptr }, { i64 } } %108, 0, 1
  store ptr %110, ptr %alloc
  %111 = extractvalue { { ptr, ptr }, { i64 } } %108, 1, 0
  store i64 %111, ptr %3
  br label %L130
L130:                                                ; preds = %L127
  %112 = load i64, ptr %3
  store i64 %112, ptr %27
  %113 = load i64, ptr %27
  store i64 %113, ptr %28
  store ptr @camlData_decl__float327, ptr %29
  store ptr @camlData_decl__immstring38, ptr %30
  %114 = load i64, ptr %30
  store i64 %114, ptr %5
  %115 = load i64, ptr %29
  store i64 %115, ptr %6
  %116 = load i64, ptr %5
  %117 = load i64, ptr %6
  %118 = load ptr, ptr %ds
  %119 = load ptr, ptr %alloc
  %120 =  call cc 105 { { ptr, ptr }, { i64 } } @caml_c_call(ptr %118, ptr %119, ptr @caml_format_float32, i64 poison, i64 %116, i64 %117)
  %121 = extractvalue { { ptr, ptr }, { i64 } } %120, 0, 0
  store ptr %121, ptr %ds
  %122 = extractvalue { { ptr, ptr }, { i64 } } %120, 0, 1
  store ptr %122, ptr %alloc
  %123 = extractvalue { { ptr, ptr }, { i64 } } %120, 1, 0
  store i64 %123, ptr %3
  br label %L133
L133:                                                ; preds = %L130
  %124 = load i64, ptr %3
  store i64 %124, ptr %31
  %125 = load i64, ptr %31
  store i64 %125, ptr %32
  store ptr @camlData_decl__const_block54, ptr %33
  store i64 1, ptr %34
  store ptr @camlStdlib__Format__fn$5b$2fworkspace_root$2fformat.ml$3a1458$2c4$2d$2d66$5d_550, ptr %35
  %126 = load i64, ptr %35
  store i64 %126, ptr %3
  %127 = load i64, ptr %34
  store i64 %127, ptr %4
  %128 = load i64, ptr %33
  store i64 %128, ptr %5
  %129 = load i64, ptr %3
  %130 = load i64, ptr %4
  %131 = load i64, ptr %5
  %132 = load ptr, ptr %ds
  %133 = load ptr, ptr %alloc
  %134 =  call cc 104 { { ptr, ptr }, { i64 } } @camlCamlinternalFormat__make_printf_HIDE_STAMP(ptr %132, ptr %133, i64 %129, i64 %130, i64 %131)
  %135 = extractvalue { { ptr, ptr }, { i64 } } %134, 0, 0
  store ptr %135, ptr %ds
  %136 = extractvalue { { ptr, ptr }, { i64 } } %134, 0, 1
  store ptr %136, ptr %alloc
  %137 = extractvalue { { ptr, ptr }, { i64 } } %134, 1, 0
  store i64 %137, ptr %3
  br label %L134
L134:                                                ; preds = %L133
  %138 = load i64, ptr %3
  store i64 %138, ptr %36
  %139 = load i64, ptr %36
  store i64 %139, ptr %37
  store ptr @camlData_decl__float4, ptr %38
  %140 = load i64, ptr %38
  store i64 %140, ptr %3
  %141 = load i64, ptr %32
  store i64 %141, ptr %4
  %142 = load i64, ptr %37
  store i64 %142, ptr %5
  %143 = load i64, ptr %3
  %144 = load i64, ptr %4
  %145 = load i64, ptr %5
  %146 = load ptr, ptr %ds
  %147 = load ptr, ptr %alloc
  %148 =  call cc 104 { { ptr, ptr }, { i64 } } @caml_apply2(ptr %146, ptr %147, i64 %143, i64 %144, i64 %145)
  %149 = extractvalue { { ptr, ptr }, { i64 } } %148, 0, 0
  store ptr %149, ptr %ds
  %150 = extractvalue { { ptr, ptr }, { i64 } } %148, 0, 1
  store ptr %150, ptr %alloc
  %151 = extractvalue { { ptr, ptr }, { i64 } } %148, 1, 0
  store i64 %151, ptr %3
  br label %L135
L135:                                                ; preds = %L134
  %152 = load i64, ptr %3
  store i64 %152, ptr %39
  %153 = load i64, ptr %39
  store i64 %153, ptr %40
  store i64 11, ptr %41
  %154 = load i64, ptr %41
  store i64 %154, ptr %3
  %155 = load i64, ptr %3
  %156 = load ptr, ptr %ds
  %157 = load ptr, ptr %alloc
  %158 =  call cc 104 { { ptr, ptr }, { i64 } } @camlData_decl__f_HIDE_STAMP(ptr %156, ptr %157, i64 %155)
  %159 = extractvalue { { ptr, ptr }, { i64 } } %158, 0, 0
  store ptr %159, ptr %ds
  %160 = extractvalue { { ptr, ptr }, { i64 } } %158, 0, 1
  store ptr %160, ptr %alloc
  %161 = extractvalue { { ptr, ptr }, { i64 } } %158, 1, 0
  store i64 %161, ptr %3
  br label %L136
L136:                                                ; preds = %L135
  %162 = load i64, ptr %3
  store i64 %162, ptr %42
  %163 = load i64, ptr %42
  store i64 %163, ptr %43
  store ptr @camlData_decl__const_block67, ptr %44
  store i64 1, ptr %45
  store ptr @camlStdlib__Format__fn$5b$2fworkspace_root$2fformat.ml$3a1458$2c4$2d$2d66$5d_550, ptr %46
  %164 = load i64, ptr %46
  store i64 %164, ptr %3
  %165 = load i64, ptr %45
  store i64 %165, ptr %4
  %166 = load i64, ptr %44
  store i64 %166, ptr %5
  %167 = load i64, ptr %3
  %168 = load i64, ptr %4
  %169 = load i64, ptr %5
  %170 = load ptr, ptr %ds
  %171 = load ptr, ptr %alloc
  %172 =  call cc 104 { { ptr, ptr }, { i64 } } @camlCamlinternalFormat__make_printf_HIDE_STAMP(ptr %170, ptr %171, i64 %167, i64 %168, i64 %169)
  %173 = extractvalue { { ptr, ptr }, { i64 } } %172, 0, 0
  store ptr %173, ptr %ds
  %174 = extractvalue { { ptr, ptr }, { i64 } } %172, 0, 1
  store ptr %174, ptr %alloc
  %175 = extractvalue { { ptr, ptr }, { i64 } } %172, 1, 0
  store i64 %175, ptr %3
  br label %L137
L137:                                                ; preds = %L136
  %176 = load i64, ptr %3
  store i64 %176, ptr %47
  %177 = load i64, ptr %47
  store i64 %177, ptr %48
  %178 = load i64, ptr %48
  %179 = add i64 %178, 0
  %180 = inttoptr i64 %179 to ptr
  %181 = load i64, ptr %180
  store i64 %181, ptr %49
  %182 = load i64, ptr %43
  store i64 %182, ptr %3
  %183 = load i64, ptr %48
  store i64 %183, ptr %4
  %184 = load i64, ptr %3
  %185 = load i64, ptr %4
  %186 = load ptr, ptr %ds
  %187 = load ptr, ptr %alloc
  %188 = load i64, ptr %49
  %189 = inttoptr i64 %188 to ptr
  %190 =  call cc 104 { { ptr, ptr }, { i64 } } %189(ptr %186, ptr %187, i64 %184, i64 %185)
  %191 = extractvalue { { ptr, ptr }, { i64 } } %190, 0, 0
  store ptr %191, ptr %ds
  %192 = extractvalue { { ptr, ptr }, { i64 } } %190, 0, 1
  store ptr %192, ptr %alloc
  %193 = extractvalue { { ptr, ptr }, { i64 } } %190, 1, 0
  store i64 %193, ptr %3
  br label %L138
L138:                                                ; preds = %L137
  %194 = load i64, ptr %3
  store i64 %194, ptr %50
  %195 = load i64, ptr %50
  store i64 %195, ptr %51
  store ptr @camlData_decl, ptr %52
  %196 = load i64, ptr %52
  store i64 %196, ptr %53
  %197 = load i64, ptr %53
  store i64 %197, ptr %9
  store i64 1, ptr %54
  %198 = load i64, ptr %54
  store i64 %198, ptr %3
  %199 = extractvalue { { { ptr, ptr }, { i64 } } } poison, 0
  %200 = load ptr, ptr %ds
  %201 = insertvalue { { ptr, ptr }, { i64 } } %199, ptr %200, 0, 0
  %202 = load ptr, ptr %alloc
  %203 = insertvalue { { ptr, ptr }, { i64 } } %201, ptr %202, 0, 1
  %204 = load i64, ptr %3
  %205 = insertvalue { { ptr, ptr }, { i64 } } %203, i64 %204, 1, 0
  ret { { ptr, ptr }, { i64 } } %205
}

@.temp.Data_decl.0 = global { ptr } { ptr @caml_format_float32 }, align 8
declare cc 104 { { ptr, ptr }, { i64 } } @camlCamlinternalFormat__make_printf_HIDE_STAMP(ptr, ptr, i64, i64, i64)
declare cc 104 { { ptr, ptr }, { i64 } } @caml_apply2(ptr, ptr, i64, i64, i64)
declare i64 @llvm.read_register.i64(metadata)
declare void @llvm.write_register.i64(metadata, i64)

@camlStdlib__Format__fn$5b$2fworkspace_root$2fformat.ml$3a1458$2c4$2d$2d66$5d_550 = external global ptr
@camlStdlib__print_endline_138 = external global ptr
@caml_c_call = external global ptr
@caml_curry2 = external global ptr
@caml_float32_ops = external global ptr
@caml_format_float32 = external global ptr
@caml_ml_flush = external global ptr
@caml_ml_output = external global ptr
@caml_ml_output_char = external global ptr

@camlData_decl__data_end = global {  } {  }, align 8
define void @camlData_decl__code_end() { ret void }
@camlData_decl__frametable = global {  } {  }, align 8
